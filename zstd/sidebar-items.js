initSidebarItems({"fn":[["compress","Compress a single block of data to the given destination buffer.Returns the number of bytes written, or an error if something happened (for instance if the destination buffer was too small)."],["compress_to_vec","Compress a block of data, and return the compressed result in a `Vec<u8>`."],["decompress","Deompress a single block of data to the given destination buffer.Returns the number of bytes written, or an error if something happened (for instance if the destination buffer was too small)."],["decompress_to_vec","Decompress a block of data, and return the decompressed result in a `Vec<u8>`.The decompressed data should be less than `capacity` bytes, or an error will be returned."]],"mod":[["dict","Train a dictionary from various sources.A dictionary can help improve the compression of small files. The dictionary must be present during decompression, but can be shared accross multiple \"similar\" files.Creating a dictionary using the `zstd` C library, using the `zstd` command-line interface, using this library, or using the `train` binary provided, should give the same result, and are therefore completely compatible.To use, see `Encoder::with_dictionary` or `Decoder::with_dictionary`."]],"struct":[["Decoder","A decoder that decompress input data from another `Read`."],["Encoder","An encoder that compress and forward data to another writer.The zstd library has an internal input buffer (~128kb)."]]});